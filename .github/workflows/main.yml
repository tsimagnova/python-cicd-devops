name: Build on DockerHub and Deploy to AWS
on:
  push:
    branches:
      - main 
jobs:
  run_tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code source
      uses: actions/checkout@v2

    - name: Exécuter les tests
      run: |
        docker run --rm -v $PWD:/app -w /app python:3.9-slim-buster /bin/bash -c "apt-get update && apt-get install -y make && make test"
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.IMAGE_NAME}}:${{ secrets.IMAGE_TAG}}
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code source
        uses: actions/checkout@v2

      - name: Préparation de la clé SSH
        run: |
          echo -n "${{ secrets.AWS_PRIVATE_SSH_KEY }}" > key.pem 
          chmod 600 key.pem

      - name: Pull Docker image
        run: |
         ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-52-14-209-188.us-east-2.compute.amazonaws.com 'sudo docker pull ${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}'
      - name: Stop running container
        run: |
         ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-52-14-209-188.us-east-2.compute.amazonaws.com 'sudo docker stop ${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true'
         ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-52-14-209-188.us-east-2.compute.amazonaws.com 'sudo docker rm ${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true'
      - name: Run new container
        run: |
         ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-52-14-209-188.us-east-2.compute.amazonaws.com 'sudo docker run -d -p 5000:5000 ${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}'

